# Default values for vcgateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
  # - name: registry-pullsecrets
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  clusterIP: 
  bpa:
    targetPort:
    port: 80
  debug:
    targetPort:
    port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configuration:
  accessLoggerEnabled:
  authenticationType: ""
  authorizationUrl: ""
  authMethod: ""
  # Port were application / pod accepts traffic.
  # Same as targetPort
  authPort: 9115
  backendServiceNamePrefix: ""
  # Secret
  clientId: ""
  # Secret
  clientSecret: ""
  configPath: ""
  consulHost: ""
  consulIpAddr: ""
  # Consul Metadata that holds the diode url
  consulMetadata: ""
  consulPort: ""
  # CONSUL_PREFER_IP_ADDRESS
  consulPreferIpAddress: 
  consulSecure: ""
  cookieDomain: ""
  cookieEnabled: ""
  cookieHttpOnly: ""
  cookieMaxAge: ""
  cookieName: ""
  cookieSameSite: ""
  cookieSecure: ""
  corsEnabled: ""
  ecdhPrivateKey: ""
  endsessionRedirectUri: ""
  endsessionUrl: ""
  grantType: ""
  healthEnabled: 
  issuer: ""
  javaOpts: ""
  jwksUri: ""
  jwtAttributeForBackendServiceName: ""
  nameKey: ""
  openidResponseMode: ""
  openidResponseType: ""
  redirectionEnabled: ""
  redirectUri: ""
  rolesName: ""
  rolesSeparator: ""
  scopes: ""
  securityRedirectLogout: ""
  serverHost: ""
  serverName: ""
  tokenUrl: ""
  userInfo: ""
  vcauthnPresReqConfId: ""

diode:
  enabled: false
  replicaCount: 1

  image:
    repository: cloud.canister.io:5000/dgateled/diode-image-bullseye
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.1.7"

  imagePullSecrets:
    - name: registry-pullsecrets
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    # Likely true if bind and false if publish
    enabled: fale
    type: ClusterIP
    clusterIP:
      ip:  
      ports: 
        - port: 8080
          targetPort: 8080
          protocol: TCP
          name: http
        - port: 443
          targetPort: 443
          protocol: TCP
          name: https
    loadBalancer: 
      ip: 
      ports: 
        - port: 
          targetPort: 
          protocol: 
          name: 
    nodePort: 
      ip: 
      ports: 
        - port: 
          targetPort: 
          protocol: 
          name: 

  logging:
    displayAddress:
      enabled: true
    displayProcess:
      enabled: true

  # base64 encoded diode private keys for dbpath
  # Add up to 5 keys
  base64PrivateKey: 
    one: 
    two: 
    three: 
    four:
    five:

  # Use a list of options and command properties to construct a diode cli command
  # The example below will generate these commands: 
  #  diode   -dbpath /go/diode/BASE64PRIVATEKEY_ONE  publish -public 5445:5455 -public 5666:5666 >/dev/null 2>&1 &
  #  diode   -bind 4005:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:4005 -dbpath /go/diode/BASE64PRIVATEKEY_TWO  publish >/dev/null 2>&1 &
  #  diode   -dbpath /go/diode/BASE64PRIVATEKEY_THREE -bind 5566:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:5566  publish >/dev/null 2>&1 &
  # To use a specific private key for your dbpath eg the first one, 
  # reference it like so: base64PrivateKey.one
  cli:
    - options:
        - key: 
          value: 
      command:
        publish:
          - key: 
            value: 
          - key: 
            value: 
    # - options:
    #     - key: bind
    #       value: 2020:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:4005
    #     - key: dbpath
    #       value: base64PrivateKey.two
    #   command:
    #     publish: ""
    # - options:
    #     - key: dbpath
    #       value: base64PrivateKey.three
    #     - key: bind
    #       value: 2020:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:5566
    #   command:
    #     publish: ""


  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    keepPvc: true
    # Size of storage. Default: 20Mi
    size: "20Mi"